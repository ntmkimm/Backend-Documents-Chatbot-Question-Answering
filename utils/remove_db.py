import asyncio
from surrealdb import Surreal

async def clear_surrealdb():
    """
    X√≥a h·∫øt d·ªØ li·ªáu trong SurrealDB namespace v√† database
    """
    # Th√¥ng tin k·∫øt n·ªëi
    SURREAL_ADDRESS = "127.0.0.1"
    SURREAL_PORT = 8000
    SURREAL_USER = "root"
    SURREAL_PASS = "root"
    SURREAL_NAMESPACE = "testnd"
    SURREAL_DATABASE = "testdb"
    
    # T·∫°o k·∫øt n·ªëi
    db = Surreal()
    
    try:
        # K·∫øt n·ªëi t·ªõi SurrealDB
        await db.connect(f"ws://{SURREAL_ADDRESS}:{SURREAL_PORT}/rpc")
        print(f"‚úÖ ƒê√£ k·∫øt n·ªëi t·ªõi SurrealDB t·∫°i {SURREAL_ADDRESS}:{SURREAL_PORT}")
        
        # ƒêƒÉng nh·∫≠p
        await db.signin({"user": SURREAL_USER, "pass": SURREAL_PASS})
        print("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng")
        
        # Ch·ªçn namespace v√† database
        await db.use(SURREAL_NAMESPACE, SURREAL_DATABASE)
        print(f"‚úÖ ƒê√£ ch·ªçn namespace: {SURREAL_NAMESPACE}, database: {SURREAL_DATABASE}")
        
        # L·∫•y danh s√°ch t·∫•t c·∫£ c√°c table
        result = await db.query("INFO FOR DB;")
        print("üìã Th√¥ng tin database:")
        print(result)
        
        # X√°c nh·∫≠n tr∆∞·ªõc khi x√≥a
        confirm = input(f"\n‚ö†Ô∏è  B·∫†N C√ì CH·∫ÆC CH·∫ÆN MU·ªêN X√ìA H·∫æT D·ªÆ LI·ªÜU TRONG DATABASE '{SURREAL_DATABASE}' KH√îNG? (yes/no): ")
        
        if confirm.lower() != 'yes':
            print("‚ùå ƒê√£ h·ªßy thao t√°c x√≥a d·ªØ li·ªáu")
            return
        
        # Ph∆∞∆°ng ph√°p 1: X√≥a t·ª´ng table (an to√†n h∆°n)
        print("\nüóëÔ∏è  B·∫Øt ƒë·∫ßu x√≥a d·ªØ li·ªáu...")
        
        # L·∫•y danh s√°ch c√°c table
        tables_result = await db.query("SELECT VALUE name FROM array::distinct((SELECT VALUE meta::tb(id) FROM type::table($tb)) FOR $tb IN ['users', 'posts', 'comments', 'products', 'orders']) WHERE name != NONE;")
        
        if tables_result and len(tables_result) > 0 and tables_result[0]['result']:
            tables = tables_result[0]['result']
            print(f"üìä T√¨m th·∫•y {len(tables)} table(s): {tables}")
            
            for table in tables:
                try:
                    delete_result = await db.query(f"DELETE {table};")
                    print(f"‚úÖ ƒê√£ x√≥a d·ªØ li·ªáu trong table: {table}")
                except Exception as e:
                    print(f"‚ùå L·ªói khi x√≥a table {table}: {e}")
        
        # Ph∆∞∆°ng ph√°p 2: X√≥a t·∫•t c·∫£ b·∫±ng c√°ch remove database (c·ª±c k·ª≥ nguy hi·ªÉm)
        # Uncomment d√≤ng d∆∞·ªõi n·∫øu mu·ªën x√≥a ho√†n to√†n database
        # await db.query(f"REMOVE DATABASE {SURREAL_DATABASE};")
        # print(f"üí• ƒê√£ x√≥a ho√†n to√†n database: {SURREAL_DATABASE}")
        
        # Ph∆∞∆°ng ph√°p 3: X√≥a t·∫•t c·∫£ record trong m·ªçi table
        print("\nüßπ Th·ª±c hi·ªán x√≥a to√†n b·ªô d·ªØ li·ªáu...")
        await db.query("DELETE users; DELETE posts; DELETE comments; DELETE products; DELETE orders; DELETE sessions; DELETE logs;")
        
        # Ki·ªÉm tra k·∫øt qu·∫£
        check_result = await db.query("INFO FOR DB;")
        print("\nüìã Th√¥ng tin database sau khi x√≥a:")
        print(check_result)
        
        print("\n‚úÖ ƒê√£ x√≥a h·∫øt d·ªØ li·ªáu th√†nh c√¥ng!")
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
    
    finally:
        # ƒê√≥ng k·∫øt n·ªëi
        await db.close()
        print("üîå ƒê√£ ƒë√≥ng k·∫øt n·ªëi database")

# Phi√™n b·∫£n ƒë·ªìng b·ªô s·ª≠ d·ª•ng requests (n·∫øu kh√¥ng c√≥ surrealdb async client)
def clear_surrealdb_sync():
    """
    Phi√™n b·∫£n ƒë·ªìng b·ªô s·ª≠ d·ª•ng HTTP requests
    """
    import requests
    import json
    
    # Th√¥ng tin k·∫øt n·ªëi
    SURREAL_ADDRESS = "127.0.0.1"
    SURREAL_PORT = 8000
    SURREAL_USER = "root"
    SURREAL_PASS = "root"
    SURREAL_NAMESPACE = "testnd"
    SURREAL_DATABASE = "testdb"
    
    base_url = f"http://{SURREAL_ADDRESS}:{SURREAL_PORT}/rpc"
    
    # Headers
    headers = {
        "Content-Type": "application/json",
        "Accept": "application/json"
    }
    
    try:
        # ƒêƒÉng nh·∫≠p v√† l·∫•y token
        signin_data = {
            "id": 1,
            "method": "signin",
            "params": [{"user": SURREAL_USER, "pass": SURREAL_PASS}]
        }
        
        response = requests.post(base_url, headers=headers, data=json.dumps(signin_data))
        print(f"‚úÖ K·∫øt n·ªëi th√†nh c√¥ng: {response.status_code}")
        
        # S·ª≠ d·ª•ng namespace v√† database
        use_data = {
            "id": 2,
            "method": "use",
            "params": [SURREAL_NAMESPACE, SURREAL_DATABASE]
        }
        
        response = requests.post(base_url, headers=headers, data=json.dumps(use_data))
        print(f"‚úÖ ƒê√£ ch·ªçn namespace v√† database")
        
        # X√°c nh·∫≠n
        confirm = input(f"\n‚ö†Ô∏è  B·∫†N C√ì CH·∫ÆC CH·∫ÆN MU·ªêN X√ìA H·∫æT D·ªÆ LI·ªÜU KH√îNG? (yes/no): ")
        if confirm.lower() != 'yes':
            print("‚ùå ƒê√£ h·ªßy thao t√°c")
            return
        
        # X√≥a d·ªØ li·ªáu
        delete_queries = [
            "DELETE users;",
            "DELETE posts;", 
            "DELETE comments;",
            "DELETE products;",
            "DELETE orders;",
            "DELETE sessions;",
            "DELETE logs;"
        ]
        
        for i, query in enumerate(delete_queries):
            query_data = {
                "id": i + 3,
                "method": "query",
                "params": [query]
            }
            
            response = requests.post(base_url, headers=headers, data=json.dumps(query_data))
            print(f"‚úÖ ƒê√£ th·ª±c hi·ªán: {query}")
        
        print("\n‚úÖ ƒê√£ x√≥a h·∫øt d·ªØ li·ªáu th√†nh c√¥ng!")
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")

if __name__ == "__main__":
    print("üöÄ Ch·ªçn ph∆∞∆°ng ph√°p:")
    print("1. Async (c·∫ßn c√†i surrealdb package)")
    print("2. Sync v·ªõi HTTP requests")
    
    choice = input("Nh·∫≠p l·ª±a ch·ªçn (1 ho·∫∑c 2): ")
    
    if choice == "1":
        # Ch·∫°y phi√™n b·∫£n async
        asyncio.run(clear_surrealdb())
    else:
        # Ch·∫°y phi√™n b·∫£n sync
        clear_surrealdb_sync()